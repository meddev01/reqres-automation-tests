name: üöÄ CI - Tests Automatis√©s Selenium (Python 3.14)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # √âtape 1 : R√©cup√©ration du code
      - name: üîÑ Checkout du code
        uses: actions/checkout@v4

      # √âtape 2 : Installation manuelle de Python 3.14
      - name: üêç Installation de Python 3.14
        run: |
          sudo apt-get update
          sudo apt-get install -y wget build-essential libssl-dev zlib1g-dev \
              libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev \
              libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev tk-dev
          wget https://www.python.org/ftp/python/3.14.0/Python-3.14.0.tgz
          tar -xvf Python-3.14.0.tgz
          cd Python-3.14.0
          ./configure --enable-optimizations
          make -j 4
          sudo make altinstall
          python3.14 --version

      # √âtape 3 : Installation des d√©pendances
      - name: üì¶ Installation des d√©pendances
        run: |
          python3.14 -m pip install --upgrade pip
          python3.14 -m pip install -r requirements.txt
          python3.14 -m pip install allure-pytest

      # √âtape 4 : Installation de Google Chrome et WebDriver
      - name: üß© Installation de Chrome et ChromeDriver
        run: |
          sudo apt-get install -y wget unzip xvfb
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb
          DRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_STABLE")
          wget https://storage.googleapis.com/chrome-for-testing-public/${DRIVER_VERSION}/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          chromedriver --version

      # √âtape 5 : Ex√©cution des tests Pytest
      - name: üß™ Lancement des tests Pytest (Headless)
        run: |
          export PYTHONPATH=$(pwd)
          xvfb-run -a python3.14 -m pytest --alluredir=reports/

      # √âtape 6 : G√©n√©ration du rapport Allure
      - name: üìä G√©n√©ration du rapport Allure
        uses: simple-elf/allure-report-action@v1.8
        with:
          allure_results: reports/
          allure_report: reports/allure-report
          allure_history: allure-history
        if: always()

      # √âtape 7 : Publication du rapport Allure sur GitHub Pages
      - name: üöÄ D√©ploiement du rapport Allure
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-history
